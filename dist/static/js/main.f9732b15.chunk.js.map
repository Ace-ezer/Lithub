{"version":3,"sources":["components/layout/Signedinlink.js","store/actions/authActions.js","components/layout/Signedoutlink.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/Signin.js","components/auth/Signup.js","store/actions/projectActions.js","components/projects/CreateProject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","href","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notification","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","display","Signin","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","onSubmit","authError","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","err","Signup","firstName","lastName","signUp","newUser","getFirestore","firstore","createUserWithEmailAndPassword","res","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","store","createStore","reactReduxFirebase","fbConfig","applyMiddleware","thunk","withExtraArgument","reduxFirestore","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f9732b15.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\n\nconst SignedInLinks = (props) => {\n\n    //console.log(props.profile.initials)\n\n    return (\n         <ul className=\"right\">\n             <li><NavLink to='/createproject'>New Project</NavLink></li>\n             <li><a href=\"/\" onClick={props.signOut} >Log Out</a></li>\n             <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n                {props.profile.initials} \n                </NavLink></li>\n         </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({\n                type: 'LOGIN_SUCCESS'\n            })\n        }).catch(err => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore })  => {\n        const firebase = getFirebase()\n        const firstore = getFirestore()\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((res) => {\n            return firstore.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0]+newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n         <ul className=\"right\">\n             <li><NavLink to='/signup'>Signup</NavLink></li>\n             <li><NavLink to='/signin'>Login</NavLink></li>\n         </ul>\n    )\n}\n\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './Signedinlink'\nimport SignedOutLinks from './Signedoutlink'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n\n    const { auth, profile } = props\n    const links = auth.uid ? <SignedInLinks profile={profile}/> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">LitHub</Link>\n                {links}\n            </div>\n        </nav>  \n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notification = ({ notifications }) => {\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">\n                        Notifications\n                    </span>\n                    <ul className='notifications'>\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content} </span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        }) }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{ project.title }</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project =>  (\n                <Link to={'/project/' + project.id} key={project.id}>\n                    <ProjectSummary project={project} />\n                </Link>\n                )\n            )}\n        </div>\n    )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notification from './Notification'\nimport ProjectList from '../projects/ProjectList'\nimport { Redirect } from 'react-router-dom'\n\n// Connect to Redux store\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\n\nclass Dashboard extends Component {\n    \n    render() {\n        const { projects, auth, notifications } = this.props\n\n        if(!auth.uid)\n            return (<Redirect to='/signin' />)    \n\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects}/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notification notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.project,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps), \n    firestoreConnect(() => [\n        {collection: 'project', orderBy: ['createdAt', 'desc']},\n        {collection: 'notifications', limit: 4, orderBy: ['time', 'desc']}\n    ])\n    )(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect }  from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nfunction ProjectDetails(props) {\n\n    //const id = props.match.params.id\n    const { project, auth } = props;\n\n    if(!auth.uid)\n        return (<Redirect to='/signin' />)\n\n    const display = project ? (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n    ) : (\n        <div className=\"center\">\n            <p>Loading projects...</p>\n        </div>\n    ) \n\n    return (\n        <div>\n            {display}\n        </div>\n        )\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.project\n    const project = projects ? projects[id]: null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'project'}\n    ])\n    )(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass Signin extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signIn(this.state)\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    render() {\n        const { auth } = this.props\n\n        if(auth.uid)\n            return (<Redirect to='/' />) \n\n        return (\n            <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                <div className=\"red-text center\">\n                    {this.props.authError? <p>{this.props.authError}</p>: null}\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: user => dispatch(signIn(user))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass Signup extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.signUp(this.state)\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    render() {\n        const { auth, authError } = this.props\n\n        if(auth.uid)\n            return (<Redirect to='/' />)\n\n        return (\n            <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"red-text center\">\n                {!authError? null: <p>{authError}</p>}\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firstName\">First Name</label>\n                    <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signUp: newUser => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup)\n","const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n\n        const firestore = getFirestore()\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n\n        console.log(\"Profile \",profile)\n\n        firestore.collection('project').add({\n            ...project,\n            authorFirstName: 'Byakuya',\n            authorLastName: 'Kuchiki',\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({\n                type: 'CREATE_PROJECT',\n                project: project\n            })\n        }).catch(err => {\n            dispatch({\n                type: 'CREATE_PROJECT_ERROR',\n                err\n            })\n        })\n    }\n}\n\nexport default createProject","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport createProject from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n\n    state = {\n        title: '',\n        content: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    render() {\n\n        const { auth } = this.props\n        if(!auth.uid)\n            return (<Redirect to='/signin' />)\n\n        return (\n            <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"content\">Project Content</label>\n                    <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                </div>\n            </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport Signin from './components/auth/Signin'\nimport Signup from './components/auth/Signup'\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={Signin} />\n          <Route path='/signup' component={Signup} />\n          <Route path='/createproject' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            return { ...state, \n                authError: 'login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state, authError: null\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('Signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR': \n            return {\n                ...state,\n                authError: action.err.message\n            }         \n        case 'SIGNOUT_SUCCESS': \n        default:\n            return state     \n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'title-1', content: 'lorem epsum'},\n        {id: '2', title: 'title-2', content: 'lorem epsum'},\n        {id: '3', title: 'title-3', content: 'lorem epsum'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n\n    switch (action.type) {\n        case 'CREATE_PROJECT': \n            console.log(\"Project Created\");\n            return state;            \n    \n        case 'CREATE_PROJECT_ERROR:':\n            console.log(\"Project Error \", action.err)\n            return state;\n            \n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\n\n// Auth\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyBHcRtpuhgK3aTpUwkyw9n_ZvPVzpBRnvE\",\n    authDomain: \"lithub-aab3a.firebaseapp.com\",\n    databaseURL: \"https://lithub-aab3a.firebaseio.com\",\n    projectId: \"lithub-aab3a\",\n    storageBucket: \"lithub-aab3a.appspot.com\",\n    messagingSenderId: \"19370109670\",\n    appId: \"1:19370109670:web:1e3732cda21864a756a927\",\n    measurementId: \"G-MP3VC0PRML\"\n}\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\n//firebase.analytics()\n\nfirebase.firestore().settings({}) //{ timestampsInSnapshots: true })\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// Creating Redux Store\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n// For firebase\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(\n  rootReducer, \n  compose(\n    reactReduxFirebase(fbConfig),\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reduxFirestore(fbConfig),\n      reactReduxFirebase (fbConfig, {  userProfile: 'users', attachAuthIsReady: true })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    //<React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>,\n    //</React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}